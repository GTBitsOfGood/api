syntax = "proto3";

package juno.email;

import "identifiers.proto";

service EmailService {
  rpc sendEmail(SendEmailRequest) returns (SendEmailResponse);
  rpc registerSender(RegisterSenderRequest) returns (RegisterSenderResponse);
  rpc authenticateDomain(AuthenticateDomainRequest)
      returns (AuthenticateDomainResponse);
  rpc verifyDomain(VerifyDomainRequest) returns (VerifyDomainResponse);
}

service EmailDbService {
  rpc getEmailSender(identifiers.EmailSenderIdentifier) returns (EmailSender);
  rpc createEmailSender(CreateEmailSenderRequest) returns (EmailSender);
  rpc updateEmailSender(UpdateEmailSenderRequest) returns (EmailSender);
  rpc deleteEmailSender(DeleteEmailSenderRequest)
      returns (EmailSender);
  rpc getEmailDomain(EmailDomainRequest) returns (EmailDomain);
  rpc createEmailDomain(CreateEmailDomainRequest) returns (EmailDomain);
}

message EmailSender {
  string username = 2;
  optional string description = 3;
  repeated identifiers.ProjectIdentifier projects = 4;
  string domain = 5;
}

message SendEmailRequest {
  repeated EmailRecipient recipients = 1;
  EmailSender sender = 2;
  repeated EmailContent content = 3;
}

message SendEmailResponse { int32 statusCode = 1; }

message EmailRecipient {
  string email = 1;
  optional string name = 2;
}

message EmailContent {
  string type = 1;
  string value = 2;
}

message CreateEmailSenderRequest {
  string username = 1;
  int64 configId = 2;
  optional string description = 3;
  string domain = 4;
}

message EmailUpdateParams { optional string description = 1; }

message UpdateEmailSenderRequest {
  identifiers.EmailSenderIdentifier emailSenderIdentifier = 1;
  EmailUpdateParams updateParams = 2;
}

message DeleteEmailSenderRequest {
  identifiers.EmailSenderIdentifier emailSenderIdentifier = 1;
  int64 configId = 2;
}

message SendEmailSenderRequestResponse { bool success = 1; }

message RegisterSenderRequest {
  string from_email = 1;
  string from_name = 2;
  string reply_to = 3;
}

message RegisterSenderResponse {
  int32 status_code = 1;
  string message = 2;
}

message AuthenticateDomainRequest {
  string domain = 1;
  string subdomain = 2;
}

message AuthenticateDomainResponse {
  int64 id = 1;
  string valid = 2;
  SendGridDnsRecords records = 3;
  int32 statusCode = 4;
}

message SendGridDnsRecords {
  SendGridRecord mail_cname = 1;
  SendGridRecord dkim1 = 2;
  SendGridRecord dkim2 = 3;
}

message SendGridRecord {
  bool valid = 1;
  string type = 2;
  string host = 3;
  string data = 4;
}

message EmailDomain {
  string domain = 1;
  string subdomain = 2;
  int64 sendgridId = 3;
  repeated identifiers.ProjectIdentifier projects = 4;
}

message EmailDomainRequest { string domain = 1; }

message CreateEmailDomainRequest {
  string domain = 1;
  string subdomain = 2;
  int64 sendgridId = 3;
  int64 configId = 4;
}

message VerifyDomainRequest {
  string domain = 1;
}

message VerifyDomainResponse {
  int64 id = 1;
  bool valid = 2;
  SendGridDnsRecords records = 3;
  int32 statusCode = 4;
}
