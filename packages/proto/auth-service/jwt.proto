syntax = "proto3";

package authservice.jwt;

service JwtService {
  rpc createJwt(CreateJwtRequest) returns (CreateJwtResponse);
  rpc validateJwt(ValidateJwtRequest) returns (ValidateJwtResponse);
}

service InternalJwtService{
  rpc createJwtFromProjectInfo(CreateJwtProjectInfo) returns(CreateJwtInfo);
  rpc verifyJwt(JwtForVerificationInfo) returns (VerificationInfo);
}

message JwtForVerificationInfo {
  string jwt = 1;
}

message VerificationInfo{
  bool verified = 1;


  oneof hashed_api_key_optional{
    string hashedApiKey = 2;
  }
}

message CreateJwtProjectInfo{
  string hashedApiKey = 1;
  string projectId = 2;
  repeated string scopes = 3;
}

message CreateJwtInfo{
  string jwt = 1;
}

message CreateJwtRequestHeader{
  string X_Api_Key = 1 [json_name = "X-Api-Key"];
}
message CreateJwtRequest {
  CreateJwtRequestHeader header = 1;  
}
message CreateJwtResponse {
  bool success = 1;
  oneof error_optional{
    string error = 2;
  }
  oneof jwt_optional{
    string jwt = 3;
  }
}

message ValidateJwtRequestHeader{
  string authorization = 1 [json_name = "Authorization"];
}
message ValidateJwtRequest {
  ValidateJwtRequestHeader header = 1;  
}
message ValidateJwtResponse {
  bool success = 1;
  bool verified = 2;
  oneof error_optional{
    string error = 3;
  }

}
