services:
  gateway:
    build:
      dockerfile: ./packages/api-gateway/Dockerfile.dev
    volumes:
      - /app/node_modules
      - ./packages/api-gateway:/app
      - ./packages/proto:/proto
    ports:
      - '3000:3000'
    entrypoint: yarn start:dev
    environment:
      AUTH_SERVICE_ADDR: auth-service
    networks:
      - bog-api-net
    depends_on:
      - auth-service

  auth-service:
    build:
      dockerfile: ./packages/auth-service/Dockerfile.dev
    volumes:
      - /app/node_modules
      - ./packages/auth-service:/app
      - ./packages/proto:/proto
    ports:
      - '50052:50052'
    entrypoint: yarn start:dev
    environment:
      AUTH_SERVICE_ADDR: auth-service
      DB_SERVICE_ADDR: db-service
    networks:
      - bog-api-net
    depends_on:
      - db-service

  db-service:
    build:
      dockerfile: ./packages/auth-service/Dockerfile.dev
    volumes:
      - /app/node_modules
      - ./packages/db-service:/app
      - ./packages/proto:/proto
    ports:
      - '50053:50053'
    entrypoint: ./entrypoint.sh
    environment:
      AUTH_SERVICE_ADDR: auth-service
      DB_SERVICE_ADDR: db-service
      DATABASE_URL: postgresql://user:password@db
    networks:
      - bog-api-net
    depends_on:
      - db

  db:
    image: postgres
    restart: always
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user
    networks:
      - bog-api-net

networks:
  bog-api-net:
    driver: bridge
